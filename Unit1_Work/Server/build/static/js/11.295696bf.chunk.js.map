{"version":3,"sources":["views/charts/MyAssets.js","views/dashboard/Dashboard.js"],"names":["brandSuccess","getStyle","brandInfo","brandDanger","brandDark","MyAssets","props","generate","symbol","min","max","out","random","Math","floor","i","push","parseFloat","data1","price","BCH","data2","ETH","data3","BTC","data4","XRP","Datasets","label","backgroundColor","hexToRgba","borderColor","pointHoverBackgroundColor","borderWidth","data","defaultOptions","maintainAspectRatio","legend","display","scales","xAxes","gridLines","drawOnChartArea","yAxes","ticks","beginAtZero","maxTicksLimit","stepSize","elements","point","radius","hitRadius","hoverRadius","hoverBorderWidth","datasets","options","labels","WidgetsDropdown","lazy","Dashboard","console","log","sm","id","className","color","name","map","value","active","style","height","marginTop","animated"],"mappings":"kNAIMA,EAAeC,mBAAS,YAAc,UACtCC,EAAYD,mBAAS,SAAW,UAChCE,EAAcF,mBAAS,WAAa,UACpCG,EAAYH,mBAAS,SAAU,UAyGtBI,EAtGE,SAAAC,GACf,IAAMC,EAAS,SAACC,EAAOC,EAAIC,GAKzB,IAJA,IAAIC,EAAM,GACJC,EAAS,SAACH,EAAKC,GACnB,OAAOG,KAAKC,MAAMD,KAAKD,UAAYF,EAAMD,EAAM,GAAKA,IAE7CM,EAAI,EAAGA,GAAK,GAAIA,IACvBJ,EAAIK,KAAKC,WAAWT,GAAQI,EAAOH,EAAIC,IAEzC,OAAOC,GAGHO,EAAQX,EAASD,EAAMa,MAAMC,IAAI,EAAE,KACnCC,EAAQd,EAASD,EAAMa,MAAMG,KAAK,GAAG,KACrCC,EAAQhB,EAASD,EAAMa,MAAMK,KAAK,IAAI,KACtCC,EAAQlB,EAASD,EAAMa,MAAMO,IAAI,EAAE,GAEnCC,EACG,CACL,CACEC,MAAO,MACPC,gBAAiBC,oBAAU5B,EAAW,IACtC6B,YAAa7B,EACb8B,0BAA2B9B,EAC3B+B,YAAa,EACbC,KAAMhB,GAER,CACEU,MAAO,MACPC,gBAAiB,cACjBE,YAAa/B,EACbgC,0BAA2BhC,EAC3BiC,YAAa,EACbC,KAAMb,GAER,CACEO,MAAO,MACPC,gBAAiB,cACjBE,YAAa5B,EACb6B,0BAA2B7B,EAC3B8B,YAAa,EACbC,KAAMX,GAER,CACEK,MAAO,MACPC,gBAAiB,cACjBE,YAAa3B,EACb4B,0BAA2B5B,EAC3B6B,YAAa,EACbC,KAAMT,IAKNU,EACG,CACHC,qBAAqB,EACrBC,OAAQ,CACNC,SAAS,GAEXC,OAAQ,CACNC,MAAO,CAAC,CACNC,UAAW,CACTC,iBAAiB,KAGrBC,MAAO,CAAC,CACNC,MAAO,CACLC,aAAa,EACbC,cAAe,IACfC,SAAU,IACVrC,IAAI,MAEN+B,UAAW,CACTH,SAAS,MAIfU,SAAU,CACRC,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,EACbC,iBAAkB,KAQ5B,OACE,cAAC,IAAD,2BACM/C,GADN,IAEEgD,SAAU3B,EACV4B,QAASpB,EACTqB,OAAQ,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,UC3F3KC,EAAkBC,gBAAK,kBAAM,iCAoEpBC,UAnEG,SAACrD,GAEjB,OADAsD,QAAQC,IAAIvD,GAEV,qCACE,cAACmD,EAAD,CAAiBtC,MAAOb,EAAMa,QAC9B,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAM2C,GAAG,IAAT,UACE,oBAAIC,GAAG,UAAUC,UAAU,kBAA3B,6BACA,qBAAKA,UAAU,mBAAf,8BAEF,eAAC,IAAD,CAAMF,GAAG,IAAIE,UAAU,oBAAvB,UACE,cAAC,IAAD,CAASC,MAAM,UAAUD,UAAU,cAAnC,SACE,cAAC,IAAD,CAAOE,KAAK,yBAEd,cAAC,IAAD,CAAcF,UAAU,mBAAxB,SAEI,CAAC,MAAO,QAAS,QAAQG,KAAI,SAAAC,GAAK,OAChC,cAAC,IAAD,CACEH,MAAM,oBAEND,UAAU,OACVK,OAAkB,UAAVD,EAJV,SAMGA,GAJIA,cAWjB,cAAC,EAAD,CAAUE,MAAO,CAACC,OAAQ,QAASC,UAAW,QAASrD,MAAOb,EAAMa,aAGtE,eAAC,IAAD,WACA,eAAC,IAAD,0BAEE,wDAEF,cAAC,IAAD,UACE,cAAC,IAAD,CAAWsD,UAAQ,EAACL,MAAO,GAAIJ,UAAU,cAG7C,eAAC,IAAD,WACE,eAAC,IAAD,6BAEE,8CAEF,cAAC,IAAD,UACE,cAAC,IAAD,CAAWS,UAAQ,EAACR,MAAM,UAAUG,MAAO,GAAIJ,UAAU,cAG7D,eAAC,IAAD,WACE,eAAC,IAAD,wBAEE,8CAEF,cAAC,IAAD,UACE,cAAC,IAAD,CAAWS,UAAQ,EAACR,MAAM,SAASG,MAAO,GAAIJ,UAAU","file":"static/js/11.295696bf.chunk.js","sourcesContent":["import React from 'react'\r\nimport { CChartLine } from '@coreui/react-chartjs'\r\nimport { getStyle, hexToRgba } from '@coreui/utils'\r\n\r\nconst brandSuccess = getStyle('success') || '#4dbd74'\r\nconst brandInfo = getStyle('info') || '#20a8d8'\r\nconst brandDanger = getStyle('danger') || '#f86c6b'\r\nconst brandDark = getStyle('dark')|| '#808080'\r\n\r\n\r\nconst MyAssets = props => {\r\n  const generate=(symbol,min,max)=>{\r\n    var out = []\r\n    const random = (min, max)=>{\r\n      return Math.floor(Math.random() * (max - min + 1) + min)\r\n    }\r\n    for (let i = 0; i <= 27; i++) {\r\n      out.push(parseFloat(symbol)+random(min,max))\r\n    }\r\n    return(out)\r\n  }\r\n\r\n  const data1 = generate(props.price.BCH,0,300)\r\n  const data2 = generate(props.price.ETH,-20,100)\r\n  const data3 = generate(props.price.BTC,-210,510)\r\n  const data4 = generate(props.price.XRP,0,0)\r\n\r\n  const Datasets = (()=>{\r\n    return [\r\n      {\r\n        label: 'BCH',\r\n        backgroundColor: hexToRgba(brandInfo, 10),\r\n        borderColor: brandInfo,\r\n        pointHoverBackgroundColor: brandInfo,\r\n        borderWidth: 2,\r\n        data: data1\r\n      },\r\n      {\r\n        label: 'ETH',\r\n        backgroundColor: 'transparent',\r\n        borderColor: brandSuccess,\r\n        pointHoverBackgroundColor: brandSuccess,\r\n        borderWidth: 2,\r\n        data: data2\r\n      },\r\n      {\r\n        label: 'BTC',\r\n        backgroundColor: 'transparent',\r\n        borderColor: brandDanger,\r\n        pointHoverBackgroundColor: brandDanger,\r\n        borderWidth: 2,\r\n        data: data3\r\n      },\r\n      {\r\n        label: 'XRP',\r\n        backgroundColor: 'transparent',\r\n        borderColor: brandDark,\r\n        pointHoverBackgroundColor: brandDark,\r\n        borderWidth: 2,\r\n        data: data4\r\n      }\r\n    ]\r\n  })()\r\n\r\n  const defaultOptions = (()=>{\r\n    return {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n          display: false\r\n        },\r\n        scales: {\r\n          xAxes: [{\r\n            gridLines: {\r\n              drawOnChartArea: false\r\n            }\r\n          }],\r\n          yAxes: [{\r\n            ticks: {\r\n              beginAtZero: true,\r\n              maxTicksLimit: 100,\r\n              stepSize: 800,\r\n              max:2400\r\n            },\r\n            gridLines: {\r\n              display: true\r\n            }\r\n          }]\r\n        },\r\n        elements: {\r\n          point: {\r\n            radius: 0,\r\n            hitRadius: 10,\r\n            hoverRadius: 4,\r\n            hoverBorderWidth: 3\r\n          }\r\n        }\r\n      }\r\n    }\r\n  )()\r\n\r\n  // render\r\n  return (\r\n    <CChartLine\r\n      {...props}\r\n      datasets={Datasets}\r\n      options={defaultOptions}\r\n      labels={['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su']}\r\n    />\r\n  )\r\n}\r\n\r\n\r\nexport default MyAssets\r\n","import React, { lazy } from 'react'\r\nimport {\r\n  CButton,\r\n  CButtonGroup,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CProgress,\r\n  CRow,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nimport MyAssets from '../charts/MyAssets.js'\r\n\r\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'))\r\nconst Dashboard = (props) => {\r\n  console.log(props)\r\n  return (\r\n    <>\r\n      <WidgetsDropdown price={props.price} />\r\n      <CCard>\r\n        <CCardBody>\r\n          <CRow>\r\n            <CCol sm=\"5\">\r\n              <h4 id=\"traffic\" className=\"card-title mb-0\">Assets Overview</h4>\r\n              <div className=\"small text-muted\">December 2020</div>\r\n            </CCol>\r\n            <CCol sm=\"7\" className=\"d-none d-md-block\">\r\n              <CButton color=\"primary\" className=\"float-right\">\r\n                <CIcon name=\"cil-cloud-download\"/>\r\n              </CButton>\r\n              <CButtonGroup className=\"float-right mr-3\">\r\n                {\r\n                  ['Day', 'Month', 'Year'].map(value => (\r\n                    <CButton\r\n                      color=\"outline-secondary\"\r\n                      key={value}\r\n                      className=\"mx-0\"\r\n                      active={value === 'Month'}\r\n                    >\r\n                      {value}\r\n                    </CButton>\r\n                  ))\r\n                }\r\n              </CButtonGroup>\r\n            </CCol>\r\n          </CRow>\r\n          <MyAssets style={{height: '300px', marginTop: '40px'}} price={props.price}/>\r\n        </CCardBody>\r\n        </CCard>\r\n        <CCard>\r\n        <CCardHeader>\r\n          Total Assets\r\n          <small> 256/1043 Tokens</small>\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CProgress animated value={25} className=\"mb-3\" />\r\n        </CCardBody>\r\n      </CCard>\r\n      <CCard>\r\n        <CCardHeader>\r\n          Smart Contracts\r\n          <small> 10/14</small>\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CProgress animated color=\"warning\" value={75} className=\"mb-3\" />\r\n        </CCardBody>\r\n      </CCard>\r\n      <CCard>\r\n        <CCardHeader>\r\n          Daily Goal\r\n          <small> 54/60</small>\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CProgress animated color=\"danger\" value={90} className=\"mb-3\" />\r\n        </CCardBody>\r\n      </CCard>\r\n\r\n      </>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n"],"sourceRoot":""}