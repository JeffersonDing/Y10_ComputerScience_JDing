{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/pages/assets/All.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","AllWidgets","lazy","All","props","useState","data","setData","meta","setMeta","modal","setModal","badges","setBadges","update","getMeta","symbol","fetch","then","resp","json","price","func","array","tmp","className","color","shape","genBadges","tags","show","onClose","size","closeButton","text","description","header","src","logo","max_supply","circulating_supply","total_supply","last_updated","onClick"],"mappings":"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","file":"static/js/8.0dba6723.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { lazy, useState } from 'react'\r\nimport {\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CButton,\r\n  CCallout,\r\n  CBadge,\r\n  CWidgetIcon,\r\n  CImg,\r\n} from '@coreui/react'\r\nconst AllWidgets = lazy(() => import('../../widgets/AllWidgets.js'))\r\nconst All = (props) => {\r\n  const [data, setData] = useState({\"\":\"\"})\r\n  const [meta,setMeta] = useState({\"\":\"\"})\r\n  const [modal, setModal] = useState(false);\r\n  const [badges,setBadges] = useState([])\r\n\r\n  const update = () => {\r\n    setModal(!modal);\r\n  }\r\nconst genBadges=(array)=>{\r\n    var tmp=[]\r\n      for(var i=0;i<array.length;i++){\r\n        tmp.push(<CBadge className=\"mt-3 ml-2\" color=\"primary\" shape=\"pill\">{array[i]}</CBadge>)\r\n      }\r\n      return(tmp.slice(0,3))\r\n}\r\n  const toggle=(data)=>{\r\n    setData(data)\r\n    setBadges(genBadges(data.tags))\r\n    getMeta(data.symbol)\r\n    setModal(!modal);\r\n}\r\n\r\nconst getMeta=(symbol)=>{\r\n  fetch(`https://infocrypt.jeffersonding.com/meta?q=${symbol}`)\r\n    .then(resp=>{\r\n      return(resp.json())\r\n    }).then(json=>{\r\n      setMeta(json.data[symbol])\r\n    })\r\n}\r\n\r\n  return (\r\n    \r\n    <>\r\n      <AllWidgets price={props.price} func={toggle} />\r\n      <CModal\r\n        show={modal}\r\n        onClose={update}\r\n        size='lg'\r\n      >\r\n        <CModalHeader closeButton>\r\n          <h1>{data.symbol}</h1>\r\n          {badges}\r\n          </CModalHeader>\r\n        <CModalBody>\r\n          <CWidgetIcon text={meta.description} header={meta.name} color=\"primary\">\r\n            <CImg src={meta.logo}></CImg>\r\n          </CWidgetIcon>\r\n        <CCallout color=\"info\" className={'bg-secondary'}>\r\n             <small className=\"text-muted\">Max Supply</small><br />\r\n             <strong className=\"h4\">{data.max_supply!=null\r\n             ?(data.max_supply)\r\n            :(\"N/A\")}</strong>\r\n           </CCallout>\r\n           <CCallout color=\"info\" className={'bg-secondary'}>\r\n             <small className=\"text-muted\">Circulating Supply</small><br />\r\n             <strong className=\"h4\">{data.circulating_supply!=null\r\n             ?(data.circulating_supply)\r\n            :(\"N/A\")}</strong>\r\n           </CCallout>\r\n           <CCallout color=\"info\" className={'bg-secondary'}>\r\n             <small className=\"text-muted\">Total Supply</small><br />\r\n             <strong className=\"h4\">{data.total_supply!=null\r\n             ?(data.total_supply)\r\n            :(\"N/A\")}</strong>\r\n           </CCallout>\r\n           <CCallout color=\"info\" className={'bg-secondary'}>\r\n             <small className=\"text-muted\">Update Time</small><br />\r\n             <strong className=\"h4\">{data.last_updated!=null\r\n             ?(data.last_updated)\r\n            :(\"N/A\")}</strong>\r\n           </CCallout>\r\n           \r\n    </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"primary\">Visit Vault</CButton>\r\n          <CButton\r\n            color=\"secondary\"\r\n            onClick={update}\r\n          >Close</CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default All"],"sourceRoot":""}