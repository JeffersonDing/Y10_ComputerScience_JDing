{"version":3,"sources":["views/pages/register/Register.js"],"names":["makeRequest","method","url","data","Promise","resolve","reject","xhr","XMLHttpRequest","withCredentials","open","onload","this","status","response","statusText","onerror","responseType","setRequestHeader","send","JSON","stringify","Register","className","md","lg","xl","name","type","placeholder","autoComplete","xs","sm","color","block","onClick","then","registrationRequest","parse","window","u2f","register","appId","registrationResponse"],"mappings":"uLAiBMA,EAAc,SAACC,EAAQC,EAAKC,GAChC,OAAO,IAAIC,SAAQ,SAAUC,EAASC,GAClC,IAAIC,EAAM,IAAIC,eACdD,EAAIE,iBAAkB,EACtBF,EAAIG,KAAKT,EAAQC,GACjBK,EAAII,OAAS,WACLC,KAAKC,QAAU,KAAOD,KAAKC,OAAS,IACpCR,EAAQE,EAAIO,UAEZR,EAAO,CACHO,OAAQD,KAAKC,OACbE,WAAYR,EAAIQ,cAI5BR,EAAIS,QAAU,WACVV,EAAO,CACHO,OAAQD,KAAKC,OACbE,WAAYR,EAAIQ,cAIV,QAAVd,GAAoBE,GACpBI,EAAIU,aAAe,OACnBV,EAAIW,iBAAiB,eAAgB,oBACrCX,EAAIY,KAAKC,KAAKC,UAAUlB,KAExBI,EAAIY,WA+DCG,UAjDE,WACf,OACE,qBAAKC,UAAU,qDAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMA,UAAU,yBAAhB,SACE,cAAC,IAAD,CAAMC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAvB,SACE,eAAC,IAAD,CAAOH,UAAU,OAAjB,UACE,cAAC,IAAD,CAAWA,UAAU,MAArB,SACE,eAAC,IAAD,WACE,0CACA,mBAAGA,UAAU,aAAb,6CACA,eAAC,IAAD,CAAaA,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOI,KAAK,iBAGhB,cAAC,IAAD,CAAQC,KAAK,OAAOC,YAAY,WAAWC,aAAa,gBAE1D,eAAC,IAAD,CAAaP,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOI,KAAK,wBAGhB,cAAC,IAAD,CAAQC,KAAK,WAAWC,YAAY,gBAI1C,cAAC,IAAD,CAAaN,UAAU,MAAvB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMQ,GAAG,KAAKC,GAAG,IAAjB,SACE,cAAC,IAAD,CAASC,MAAM,UAAUV,UAAU,OAAOW,OAAK,EAA/C,SAAgD,oDAElD,cAAC,IAAD,CAAMH,GAAG,KAAKC,GAAG,IAAjB,SACE,cAAC,IAAD,CAASC,MAAM,OAAOV,UAAU,OAAOW,OAAK,EAACC,QAAS,WA3CxEnC,EAAY,MAAO,gDAAgDoC,MAAK,SAAUjC,GAChF,IAAIkC,EAAsBjB,KAAKkB,MAAMnC,GACrCoC,OAAOC,IAAIC,SAASJ,EAAoBK,MAAO,CAACL,GAAsB,IAAI,SAACM,GACvE3C,EAAY,OAAQ,6CAA8C2C,UAwCtD,SAEG","file":"static/js/15.3ac71d56.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CRow\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nconst makeRequest = (method, url, data)=>{\r\n  return new Promise(function (resolve, reject) {\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.withCredentials = true;\r\n      xhr.open(method, url);\r\n      xhr.onload = function () {\r\n          if (this.status >= 200 && this.status < 300) {\r\n              resolve(xhr.response);\r\n          } else {\r\n              reject({\r\n                  status: this.status,\r\n                  statusText: xhr.statusText\r\n              });\r\n          }\r\n      };\r\n      xhr.onerror = function () {\r\n          reject({\r\n              status: this.status,\r\n              statusText: xhr.statusText\r\n          });\r\n      };\r\n      // eslint-disable-next-line\r\n      if (method == \"POST\" && data) {\r\n          xhr.responseType = 'json';\r\n          xhr.setRequestHeader('Content-Type', 'application/json');\r\n          xhr.send(JSON.stringify(data));\r\n      } else {\r\n          xhr.send();\r\n      }\r\n  });\r\n}\r\n\r\nconst U2FReg = () => {\r\n  makeRequest('GET', \"https://infocrypt.jeffersonding.com/register\").then(function (data) {\r\n    var registrationRequest = JSON.parse(data);\r\n    window.u2f.register(registrationRequest.appId, [registrationRequest], [], (registrationResponse) => {\r\n        makeRequest('POST', \"https://infocrypt.jeffersonding.com/verify\", registrationResponse)\r\n    });\r\n});\r\n\r\n}\r\nconst Register = () => {\r\n  return (\r\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\r\n      <CContainer>\r\n        <CRow className=\"justify-content-center\">\r\n          <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n            <CCard className=\"mx-4\">\r\n              <CCardBody className=\"p-4\">\r\n                <CForm>\r\n                  <h1>Register</h1>\r\n                  <p className=\"text-muted\">Connect Infocrypt with your key</p>\r\n                  <CInputGroup className=\"mb-3\">\r\n                    <CInputGroupPrepend>\r\n                      <CInputGroupText>\r\n                        <CIcon name=\"cil-user\" />\r\n                      </CInputGroupText>\r\n                    </CInputGroupPrepend>\r\n                    <CInput type=\"text\" placeholder=\"Username\" autoComplete=\"username\" />\r\n                  </CInputGroup>\r\n                  <CInputGroup className=\"mb-3\">\r\n                    <CInputGroupPrepend>\r\n                      <CInputGroupText>\r\n                        <CIcon name=\"cil-lock-locked\" />\r\n                      </CInputGroupText>\r\n                    </CInputGroupPrepend>\r\n                    <CInput type=\"password\" placeholder=\"OTP\" />\r\n                  </CInputGroup>\r\n                </CForm>\r\n              </CCardBody>\r\n              <CCardFooter className=\"p-4\">\r\n                <CRow>\r\n                  <CCol xs=\"12\" sm=\"6\">\r\n                    <CButton color=\"success\" className=\"mb-1\" block><span>OTP Register</span></CButton>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" sm=\"6\">\r\n                    <CButton color=\"info\" className=\"mb-1\" block onClick={()=>{\r\n                      U2FReg()\r\n                    }}><span>U2F Register</span></CButton>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardFooter>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register\r\n"],"sourceRoot":""}